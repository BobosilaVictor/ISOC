version: '3.7'

services:
  movie_service:
    build: ./backend/movie-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./backend/movie-service/:/app/
    ports:
      - 8001:8000
    environment:
      - DATABASE_URI=postgresql://movie_db_username:movie_db_password@movie_db/movie_db_dev
      - CAST_SERVICE_HOST_URL=http://cast_service:8000/api/v1/casts/
    depends_on:
      - movie_db

  movie_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_movie:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=movie_db_username
      - POSTGRES_PASSWORD=movie_db_password
      - POSTGRES_DB=movie_db_dev

  user_service:
    build: ./backend/user-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./backend/user-service/:/app/
    ports:
      - 8003:8000
    environment:
      - DATABASE_URI=postgres://user_db_username:user_db_password@user_db/user_db_dev
    depends_on:
      - user_db

  user_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_user:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user_db_username
      - POSTGRES_PASSWORD=user_db_password
      - POSTGRES_DB=user_db_dev

  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - movie_service
      - user_service

  frontend:
    build: ./frontend
    command: npm start
    volumes:
      - ./frontend/:/app/
    ports:
      - 3000:3000
    environment:
      - REACT_APP_URL=localhost
      - WATCHPACK_POLLING=true
volumes:
  postgres_data_movie:
  postgres_data_user: